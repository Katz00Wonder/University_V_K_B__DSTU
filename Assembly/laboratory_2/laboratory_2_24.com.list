EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
laboratory_2_24.com -- emu8086 assembler version: 4.08  
 
[ 16.09.2025  --  13:02:41 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       #make_COM#
[   2]        :                                       ORG 100h
[   3]        :                                       
[   4]        :                                       ; Упрощенная версия с одним набором данных
[   5]    0100: B8 0A 00                              mov ax, 10    ; A = 10
[   6]    0103: BB 05 00                              mov bx, 5     ; B = 5
[   7]    0106: B9 14 00                              mov cx, 20    ; C = 20
[   8]        :                                       
[   9]        :                                       ; X = 3(A - 2B) + 50 - C/2
[  10]    0109: 8B D3                                 mov dx, bx
[  11]    010B: D1 E2                                 shl dx, 1     ; 2B = 10
[  12]    010D: 2B C2                                 sub ax, dx    ; A - 2B = 0
[  13]    010F: BA 03 00                              mov dx, 3
[  14]    0112: F7 EA                                 imul dx       ; 3 * 0 = 0
[  15]    0114: 05 32 00                              add ax, 50    ; +50 = 50
[  16]    0117: 8B D1                                 mov dx, cx
[  17]    0119: D1 EA                                 shr dx, 1     ; C/2 = 10
[  18]    011B: 2B C2                                 sub ax, dx    ; 50 - 10 = 40
[  19]        :                                       
[  20]        :                                       ; Вывод результата (40)
[  21]    011D: E8 01 00                              call print_ax
[  22]        :                                       
[  23]    0120: C3                                    ret
[  24]        :                                       
[  25]        :                                       ; Функция вывода AX
[  26]    0121:                                       print_ax proc
[  27]    0121: BB 0A 00                              mov bx, 10
[  28]    0124: B9 00 00                              mov cx, 0
[  29]        :                                       
[  30]    0127:                                       convert:
[  31]    0127: 33 D2                                 xor dx, dx
[  32]    0129: F7 F3                                 div bx
[  33]    012B: 52                                    push dx
[  34]    012C: 41                                    inc cx
[  35]    012D: 85 C0                                 test ax, ax
[  36]    012F: 75 F6                                 jnz convert
[  37]        :                                       
[  38]    0131:                                       print:
[  39]    0131: 5A                                    pop dx
[  40]    0132: 80 C2 30                              add dl, '0'
[  41]    0135: B4 02                                 mov ah, 02h
[  42]    0137: CD 21                                 int 21h
[  43]    0139: E2 F6                                 loop print
[  44]        :                                       
[  45]    013B: C3                                    ret
[  46]        :                                       print_ax endp
[  47]        :                                       
 
===================================================================================================
 




===================================================================================================
